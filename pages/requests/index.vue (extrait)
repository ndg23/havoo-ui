<template>
  <!-- Reste du code existant -->
  
  <!-- Ajouter le bouton de proposition dans la carte de demande -->
  <button 
    v-if="isExpert && request.status === 'open'"
    @click="openProposalModal(request)"
    class="mt-2 px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white rounded-full text-sm font-medium"
  >
    Proposer mes services
  </button>
  
  <!-- Ajouter le modal à la fin du template -->
  <ProposalModal
    :is-open="proposalModalOpen"
    :request="selectedRequest"
    @close="closeProposalModal"
    @submit="handleProposalSubmit"
  />
</template>

<script setup>
// Imports existants
import ProposalModal from '~/components/ProposalModal.vue'

// Variables réactives existantes
const proposalModalOpen = ref(false)
const selectedRequest = ref({})

// Méthodes pour gérer le modal
const openProposalModal = (request) => {
  selectedRequest.value = request
  proposalModalOpen.value = true
}

const closeProposalModal = () => {
  proposalModalOpen.value = false
}

const handleProposalSubmit = async (proposal) => {
  try {
    // Dans un environnement réel, nous enverrions la proposition à Supabase
    /*
    const { error } = await supabase
      .from('proposals')
      .insert({
        request_id: proposal.requestId,
        expert_id: auth.user().id,
        price: proposal.price,
        delivery_time: proposal.deliveryTime,
        description: proposal.message,
        status: 'pending'
      })
    
    if (error) throw error
    */
    
    // Afficher un message de succès
    console.log('Proposition envoyée avec succès', proposal)
    
    // Dans un environnement réel, vous pourriez afficher une notification
    alert('Votre proposition a été envoyée avec succès!')
  } catch (error) {
    console.error('Erreur lors de l\'envoi de la proposition:', error)
  }
}
</script> 